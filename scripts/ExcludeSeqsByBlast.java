package scripts;

import java.io.*;
import java.lang.String;
import java.util.*;

public class ExcludeSeqsByBlast extends Script {
	public static String title = "Exclude Sequences by BLAST";
	public static String b_desc = "Exclude contaminated sequences using BLAST";

	public ExcludeSeqsByBlast() {
		// set up script name, command, and descriptions
		this.link = "http://qiime.org/scripts/exclude_seqs_by_blast.html";
		this.c_name = SCRIPTS_PATH + "exclude_seqs_by_blast.py";
		this.l_desc = "This code is designed to allow users of the QIIME workflow to conveniently exclude unwanted sequences from their data. This is mostly useful for excluding human sequences from runs to comply with Internal Review Board (IRB) requirements, but may also have other uses (e.g. perhaps excluding a major bacterial contaminant). Sequences from a run are searched against a user-specified subject database, where BLAST hits are screened by e-value and the percentage of the query that aligns to the sequence.<br><br>For human screening THINK CAREFULLY about the data set that you screen against. Are you excluding human non-coding sequences? What about mitochondrial sequences? This point is CRITICAL because submitting human sequences that are not IRB-approved is BAD.<br><br>(e.g. you would NOT want to just screen against just the coding sequences of the human genome as found in the KEGG .nuc files, for example)<br><br>One valid approach is to screen all putative 16S rRNA sequences against greengenes to ensure they are bacterial rather than human.<br><br>WARNING: You cannot use this script if there are spaces in the path to the database of fasta files because formatdb cannot handle these paths (this is a limitation of NCBI’s tools and we have no control over it).";
		this.output_desc = "Four output files are generated based on the supplied outputpath + unique suffixes:<br><br>1. “filename_prefix”.matching: A FASTA file of sequences that did pass the screen (i.e. matched the database and passed all filters).<br>2.“filename_prefix”.non-matching: A FASTA file of sequences that did not pass the screen.<br>3. “filename_prefix”.raw_blast_results: Contains the raw BLAST results from the screening.<br>4. “filename_prefix”.sequence_exclusion_log: A log file summarizing the options used and results obtained.<br>In addition, if the --no_clean option is passed, the files generated by formatdb will be kept in the same directory as subjectdb.";

		// set up the required otpions
		this.r_options = new ArrayList<Option>(3);
		this.r_options.add(new Option("Input FASTA", "-i", Option.PATH, "The path to a FASTA file containing query sequences"));
		this.r_options.add(new Option("BLAST Against", "-d", Option.PATH, "The path to a FASTA file to BLAST against"));
		this.r_options.add(new Option("Output", "-o", Option.PATH, "The output directory"));

		// set up the extra options
		this.e_options = new ArrayList<Option>(8);
		this.e_options.add(new Option("E-Value Cut Off", "-e", Option.NUM, "The e-value cutoff for blast queries [default: 1e-10]."));
		this.e_options.add(new Option("Percent Aligned", "-p", Option.NUM, "The % alignment cutoff for blast queries, expressed as a fraction between 0 and 1 [default: 0.97]."));
		this.e_options.add(new Option("No Clean?", "--no_clean", Option.NOARG, "If set, don’t delete files generated by formatdb after running [default: False]."));
		this.e_options.add(new Option("BLAST Matricies", "--blastmaroot", Option.PATH, "Path to a folder containing blast matrices [default: None]."));
		this.e_options.add(new Option("Working Directory", "--working_dir", Option.PATH, "Working dir for BLAST [default: /Users/caporaso/temp/]."));
		this.e_options.add(new Option("Max Hits", "-m", Option.NUM, "Max hits parameter for BLAST. CAUTION: Because filtering on alignment percentage occurs after BLAST, a max hits value of 1 in combination with an alignment percent filter could miss valid contaminants. [default: 100]"));
		this.e_options.add(new Option("Word Size", "-w", Option.NUM, "Word size to use for BLAST search [default: 28]"));
		this.e_options.add(new Option("No Format DB?", "-n", Option.NOARG, "If this flag is specified, format_db will not be called on the subject database (formatdb will be set to False). This is useful if you have already formatted the database and a) it took a very long time or b) you want to run the script in parallel on the pre-formatted database [default: False]"));
	
	}
}