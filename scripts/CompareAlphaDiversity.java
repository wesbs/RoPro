package scripts;

import java.io.*;
import java.lang.String;
import java.util.*;

public class CompareAlphaDiversity extends Script {
	public static String title = "Compare Alpha Diversity";
	public static String b_desc = "This script compares alpha diversities based on a two-sample t-test using either parametric or non-parametric (Monte Carlo) methods.";

	public CompareAlphaDiversity() {
		// set up script name, command, and descriptions
		this.link = "http://qiime.org/scripts/compare_alpha_diversity.html";
		this.c_name = SCRIPTS_PATH + "compare_alpha_diversity.py";
		this.l_desc = "This script compares the alpha diversity of samples found in a collated alpha diversity file. The comparison is done not between samples, but between groups of samples. The groupings are created via the input category passed via -c/–category. Any samples which have the same value under the catgory will be grouped.<br><br>For example, if your mapping file had a category called ‘Treatment’ that separated your samples into three groups (Treatment=’Control’, Treatment=’Drug’, Treatment=‘2xDose’), passing ‘Treatment’ to this script would cause it to compare (Control,Drug), (Control,2xDose), (2xDose, Drug) alpha diversity values. By default the two-sample t-test will be nonparametric (i.e. using Monte Carlo permutations to calculate the p-value), though the user has the option to make the test a parametric t-test.<br><br>The script creates an output file in tab-separated format where each row is a different group comparison. The columns in each row denote which two groups of samples are being compared, as well as the mean and standard deviation of each group’s alpha diversity. Finally, the t-statistic and p-value are reported for the comparison. This file can be most easily viewed in a spreadsheet program such as Excel.<br><br>Note: Any iterations of a rarefaction at a given depth will be averaged. For instance, if your collated_alpha file had 10 iterations of the rarefaction at depth 480, the scores for the alpha diversity metrics of those 10 iterations would be averaged (within sample). The iterations are not controlled by this script; when multiple_rarefactions.py is called, the -n option specifies the number of iterations that have occurred. The multiple comparison correction takes into account the number of between group comparisons. If you do not know the rarefaction depth available or you want to use the deepest rarefaction level available then do not pass -d/–depth and it will default to using the deepest available.<br><br>If t-statistics and/or p-values are None for any of your comparisons, there are three possible reasons. The first is that there were undefined values in your collated alpha diversity input file. This occurs if there were too few sequences in one or more of the samples in the groups involved in those comparisons to compute alpha diversity at that depth. You can either rerun compare_alpha_diversity.py passing a lower value for –depth, or you can re-run alpha diversity after filtering samples with too few sequences. The second is that you had some comparison where each treatment was represented by only a single sample. It is not possible to perform a two-sample t-test on two samples each of length 1, so None will be reported instead. The third possibility occurs when using the nonparamteric t-test with small datasets where the Monte Carlo permutations don’t return a p-value because the distribution of the data has no variance. The multiple comparisons correction will not penalize you for comparisons that return as None regardless of origin.<br><br>If the means/standard deviations are None for any treatment group, the likely cause is that there is an ‘na’ value in the collated_alpha file that was passed.";
		this.output_desc = "Generates a tsv stats file and pdf of boxplots for each input category. Each row in the tsv file corresponds to a comparison between two groups of treatment values, and includes the means and standard deviations of the two groups’ alpha diversities, along with the results of the two-sample t-test.";

		// set up the required otpions
		this.r_options = new ArrayList<Option>(4);
		this.r_options.add(new Option("Alpha Diversity File", "-i", Option.PATH, "Path to collated alpha diversity file (as generated by collate_alpha.py) [REQUIRED]"));
		this.r_options.add(new Option("Mapping File", "-m", Option.PATH, "Path to the mapping file [REQUIRED]"));
		this.r_options.add(new Option("Categories", "-c", Option.INPUT, "Comma-separated list of categories for comparison [REQUIRED]"));
		this.r_options.add(new Option("Output", "-o", Option.PATH, "Directory where output files should be stored [REQUIRED]"));

		// set up the extra options
		this.e_options = new ArrayList<Option>(4);
		List<String> selects = new ArrayList<String>(2);
		selects.add("parametric");
		selects.add("nonparametric");
		this.e_options.add(new Option("Test Type", "-t", Option.SELECT, selects, 1, "The type of test to perform when calculating the p-values. Valid choices: parametric, nonparametric. If test_type is nonparametric, Monte Carlo permutations will be used to determine the p-value. If test_type is parametric, the num_permutations option will be ignored and the t-distribution will be used instead [default: nonparametric]"));
		this.e_options.add(new Option("Number of Permutations", "-n", Option.NUM, "The number of permutations to perform when calculating the p-value. Must be greater than 10. Only applies if test_type is nonparametric [default: 999]"));
		selects = new ArrayList<String>(3);
		selects.add("bonferroni");
		selects.add("fdr");
		selects.add("none");
		this.e_options.add(new Option("Correction Method", "-p", Option.SELECT, selects, 0, "Method to use for correcting multiple comparisons. Available methods are bonferroni, fdr, or none. [default: bonferroni]"));
		this.e_options.add(new Option("Depth", "-d", Option.NUM, "Depth of rarefaction file to use [default: greatest depth]"));
	}
}