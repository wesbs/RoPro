package scripts;

import java.io.*;
import java.lang.String;
import java.util.*;

public class ValidateDemulFASTA extends Script {
	public static String title = "Validate Demultiplexed FASTA";
	public static String b_desc = "Checks a fasta file to verify if it has been properly demultiplexed, i.e., it is in QIIME compatible format.";

	public ValidateDemulFASTA() {
		// set up script name, command, and descriptions
		this.link = "http://qiime.org/scripts/validate_demultiplexed_fasta.html";
		this.c_name = SCRIPTS_PATH + "validate_demultiplexed_fasta.py";
		this.l_desc = "Checks file is a valid fasta file, does not contain gaps (‘.’ or ‘-‘ characters), contains only valid nucleotide characters, no fasta label is duplicated, SampleIDs match those in a provided mapping file, fasta labels are formatted to have SampleID_X as normally generated by QIIME demultiplexing, and the BarcodeSequence/LinkerPrimerSequences are not found in the fasta sequences. Optionally this script can also verify that the SampleIDs in the fasta sequences are also present in the tip IDs of a provided newick tree file, can test for equal sequence lengths across all sequences, and can test that all SampleIDs in the mapping file are represented in the fasta file labels.";
		this.output_desc = "No Description";

		// set up the required otpions
		this.r_options = new ArrayList<Option>(2);
		this.r_options.add(new Option("Mapping File", "-m", Option.PATH, "Name of mapping file. NOTE: Must contain a header line indicating SampleID in the first column and BarcodeSequence in the second, LinkerPrimerSequence in the third. If no barcode or linkerprimer sequence is present, leave data fields empty."));
		this.r_options.add(new Option("FASTA File", "-i", Option.PATH, "Path to the input fasta file"));

		// set up the extra options
		this.e_options = new ArrayList<Option>(8);
		this.e_options.add(new Option("Output", "-o", Option.PATH, "Directory prefix for output files [default: .]"));
		this.e_options.add(new Option("Tree File", "-t", Option.PATH, "Path to the tree file; Needed to test if sequence IDs are a subset or exact match to the tree tips, options -s and -e [default: None]"));
		this.e_options.add(new Option("Tree Subset?", "-s", Option.NOARG, "Determine if sequence IDs are a subset of the tree tips, newick tree must be passed with the -t option. [default: False]"));
		this.e_options.add(new Option("Extact Tree Match?", "-e", Option.NOARG, "Determine if sequence IDs are an exact match to tree tips, newick tree must be passed with the -t option. [default: False]"));
		this.e_options.add(new Option("Sequence Length?", "-l", Option.NOARG, "Determine if sequences are all the same length. [default: False]"));
		this.e_options.add(new Option("All IDs Found?", "-a", Option.NOARG, "Determine if all SampleIDs provided in the mapping file are represented in the fasta file labels. [default: False]"));
		this.e_options.add(new Option("Suppress Barcode Checks?", "-b", Option.NOARG, "Suppress barcode checks [default: False]"));
		this.e_options.add(new Option("Suppress Primer Checks?", "-p", Option.NOARG, "Suppress primer checks [default: False]"));
	
	}
}